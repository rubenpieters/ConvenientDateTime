package be.rubenpieters.datetime4s

import java.time.LocalDate
import java.time.format.DateTimeFormatterBuilder.ReducedPrinterParser
import java.time.format.{DateTimeFormatterBuilder, SignStyle, TextStyle}
import java.time.temporal.{ChronoField, TemporalField}

/**
  * Created by ruben on 4/10/2016.
  */
sealed trait FormatterField {
  def append(dateTimeFormatterBuilder: DateTimeFormatterBuilder)
}

final case class LiteralString(literal: String) extends FormatterField {
  override def append(dateTimeFormatterBuilder: DateTimeFormatterBuilder): Unit = {
    dateTimeFormatterBuilder.appendLiteral(literal)
  }
}

final case class LiteralChar(literal: Char) extends FormatterField {
  override def append(dateTimeFormatterBuilder: DateTimeFormatterBuilder): Unit = {
    dateTimeFormatterBuilder.appendLiteral(literal)
  }
}

sealed trait PredefinedPatternFormatterField extends FormatterField {
  def pattern: String

  override def append(dateTimeFormatterBuilder: DateTimeFormatterBuilder): Unit = {
    dateTimeFormatterBuilder.appendPattern(pattern)
  }
}


// AUTOGENERATED BY FormatterFieldsCodeGen

case object Era1 extends PredefinedPatternFormatterField {
  override val pattern = "G"
}

case object Era2 extends PredefinedPatternFormatterField {
  override val pattern = "GG"
}

case object Era3 extends PredefinedPatternFormatterField {
  override val pattern = "GGG"
}

case object Era4 extends PredefinedPatternFormatterField {
  override val pattern = "GGGG"
}

case object Era5 extends PredefinedPatternFormatterField {
  override val pattern = "GGGGG"
}

case object Year1 extends PredefinedPatternFormatterField {
  override val pattern = "u"
}

case object Year2 extends PredefinedPatternFormatterField {
  override val pattern = "uu"
}

case object Year3 extends PredefinedPatternFormatterField {
  override val pattern = "uuu"
}

case object YearEP extends PredefinedPatternFormatterField {
  override val pattern = "u..u"
}

case object YearOfEra1 extends PredefinedPatternFormatterField {
  override val pattern = "y"
}

case object YearOfEra2 extends PredefinedPatternFormatterField {
  override val pattern = "yy"
}

case object YearOfEra3 extends PredefinedPatternFormatterField {
  override val pattern = "yyy"
}

case object YearOfEraEP extends PredefinedPatternFormatterField {
  override val pattern = "y..y"
}

case object WeekBasedYear1 extends PredefinedPatternFormatterField {
  override val pattern = "Y"
}

case object WeekBasedYear2 extends PredefinedPatternFormatterField {
  override val pattern = "YY"
}

case object WeekBasedYear3 extends PredefinedPatternFormatterField {
  override val pattern = "YYY"
}

case object WeekBasedYearEP extends PredefinedPatternFormatterField {
  override val pattern = "Y..Y"
}

case object WeekOfWeekBasedYear1 extends PredefinedPatternFormatterField {
  override val pattern = "w"
}

case object WeekOfWeekBasedYear2 extends PredefinedPatternFormatterField {
  override val pattern = "ww"
}

/*case object WeekOfMonth1 extends PredefinedPatternFormatterField {
  override val pattern = "W"
}*/

case object DayOfMonth1 extends PredefinedPatternFormatterField {
  override val pattern = "d"
}

case object DayOfMonth2 extends PredefinedPatternFormatterField {
  override val pattern = "dd"
}

case object DayOfYear1 extends PredefinedPatternFormatterField {
  override val pattern = "D"
}

case object DayOfYear2 extends PredefinedPatternFormatterField {
  override val pattern = "DD"
}

case object DayOfYear3 extends PredefinedPatternFormatterField {
  override val pattern = "DDD"
}

case object WeekOfMonth1 extends PredefinedPatternFormatterField {
  override val pattern = "F"
}

case object DayOfWeek1 extends PredefinedPatternFormatterField {
  override val pattern = "E"
}

case object DayOfWeek2 extends PredefinedPatternFormatterField {
  override val pattern = "EE"
}

case object DayOfWeek3 extends PredefinedPatternFormatterField {
  override val pattern = "EEE"
}

case object DayOfWeek4 extends PredefinedPatternFormatterField {
  override val pattern = "EEEE"
}

case object DayOfWeek5 extends PredefinedPatternFormatterField {
  override val pattern = "EEEEE"
}